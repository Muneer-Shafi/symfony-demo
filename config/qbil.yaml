openapi: 3.1.0
info:
  title: 'Qbil External API - Subject to Change'
  description: |-
    ## This API is currently in experimental state, The API is subject to change based on the feedback and further testing.
    _Use Authorization header with Bearer token to access the API, like `Authorization: Bearer {yourtoken}`._
  termsOfService: 'https://developers.qbiltrade.com/terms.pdf'
  contact:
    name: 'Qbil Software B.V.'
    url: 'https://qbilsoftware.com'
    email: operations@qbil.nl
  version: 0.1.2
  x-logo:
    url: 'https://developers.qbiltrade.com/img/blacklogo.png'
    backgroundColor: '#FFFFFF'
    altText: 'Qbil Logo'
servers:
  -
    url: 'https://{tenant}.qbiltrade.com'
    description: 'Production server'
    variables:
      tenant:
        default: demo
  -
    url: 'https://{tenant}.test.qbiltrade.com/'
    description: 'Test server'
    variables:
      tenant:
        default: demo
  -
    url: 'https://{tenant}.staging.qbiltrade.com/'
    description: 'Development server'
    variables:
      tenant:
        default: demo
  -
    url: 'https://{tenant}.preprod.qbiltrade.com/'
    description: 'Development server'
    variables:
      tenant:
        default: demo
paths:
  /api/v1/me:
    get:
      operationId: me-item-id
      tags:
        - 'Api User'
      responses:
        '200':
          description: 'Me resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Me.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Current Api User'
      description: 'Retrieves a Me resource.'
      parameters: []
      deprecated: false
    patch:
      operationId: me-patch-id
      tags:
        - 'Api User'
      responses:
        '200':
          description: 'Me resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Me.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
          links: {  }
        '400':
          description: 'Invalid input'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '422':
          description: 'Unprocessable entity'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Update api settings'
      description: 'Updates the Me resource.'
      parameters: []
      requestBody:
        description: 'The updated Me resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Me'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Me.jsonapi'
        required: true
      deprecated: false
  /api/v1/contracts:
    get:
      operationId: contracts-collection-id
      tags:
        - Contract
      responses:
        '200':
          description: 'Contract collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/Contract.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Contracts
      description: 'Retrieves the collection of Contract resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
        -
          name: subsidiary.id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'subsidiary.id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:contracts'
  '/api/v1/contracts/{id}':
    get:
      operationId: contracts-item-id
      tags:
        - Contract
      responses:
        '200':
          description: 'Contract resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contract.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Contract
      description: 'Retrieves a Contract resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Contract identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:contracts'
  '/api/v1/container-orders/{id}':
    get:
      operationId: api_container-orders_id_get
      tags:
        - Order
      responses:
        '200':
          description: 'ContainerOrder resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerOrder'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContainerOrder.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Container order'
      description: 'Retrieves a ContainerOrder resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ContainerOrder identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:orders'
    patch:
      operationId: api_container-orders_id_patch
      tags:
        - Order
      responses:
        '200':
          description: 'ContainerOrder resource updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerOrder'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContainerOrder.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
          links: {  }
        '400':
          description: 'Invalid input'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '422':
          description: 'Unprocessable entity'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Update container order'
      description: 'Updates the ContainerOrder resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ContainerOrder identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ContainerOrder resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ContainerOrder'
        required: true
      deprecated: false
      security:
        -
          api_user_token:
            - 'write:orders'
  /api/v1/orders:
    get:
      operationId: orders-collection-id
      tags:
        - Order
      responses:
        '200':
          description: 'Order collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/Order.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Orders
      description: 'Get Orders'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:orders'
  '/api/v1/orders/{id}':
    get:
      operationId: orders-item-id
      tags:
        - Order
      responses:
        '200':
          description: 'Order resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Order.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Order
      description: 'Get Order'
      parameters:
        -
          name: id
          in: path
          description: 'Order identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:orders'
  '/api/v1/orders/{id}/attachments':
    get:
      operationId: order-attachments-item-id
      tags:
        - Order
      responses:
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '200':
          description: 'OrderAttachments collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderAttachments'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/OrderAttachments.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Order Attachments'
      description: 'Retrieves order attachments for order resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderAttachments identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:orders'
    post:
      operationId: order-attachments-create-id
      tags:
        - Order
      responses:
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '201':
          description: 'OrderAttachments resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAttachments'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrderAttachments.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
          links: {  }
        '400':
          description: 'Invalid input'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '422':
          description: 'Unprocessable entity'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Create Order Attachments'
      description: 'Creates a OrderAttachments resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderAttachments identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The new OrderAttachments resource'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAttachments'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OrderAttachments.jsonapi'
        required: true
      deprecated: false
      security:
        -
          api_user_token:
            - 'write:orders'
  '/api/v1/orders/{id}/back-to-back':
    get:
      operationId: api_orders_id_back_to_back_get
      tags:
        - Order
      responses:
        '200':
          description: 'Back to back order lines of order.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackToBackOrder'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
          links:
            Buyer:
              operationId: relations-item-id
              parameters:
                id: '$response.body#/buyer'
              description: 'The `buyer`  value returned in the response body can be used as a parameter to retrieve the `relation details`.'
            Seller:
              operationId: relations-item-id
              parameters:
                id: '$response.body#/seller'
              description: 'The `seller`  value returned in the response body can be used as a parameter to retrieve the `relation details`.'
            PurchaseContract:
              operationId: contracts-item-id
              parameters:
                id: '$response.body#/purchaseContract'
              description: 'The `purchaseContract`  value returned in the response body can be used as a parameter to retrieve the `contract details`.'
            SalesContract:
              operationId: contracts-item-id
              parameters:
                id: '$response.body#/salesContract'
              description: 'The `salesContract`  value returned in the response body can be used as a parameter to retrieve the `contract details`.'
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Back to back orders'
      description: 'Retrieves the collection of BackToBackOrder resources.'
      parameters:
        -
          name: id
          in: path
          description: 'BackToBackOrder identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:orders'
  '/api/v1/orders/{id}/purchase':
    get:
      operationId: order-purchase-orders-collection
      tags:
        - Order
      responses:
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '403':
          description: 'No access to orders'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '200':
          description: 'PurchaseOrder collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseOrder'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/PurchaseOrder.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Purchase Orders'
      description: 'Retrieves the collection of PurchaseOrder resources.'
      parameters:
        -
          name: id
          in: path
          description: 'PurchaseOrder identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:orders'
  '/api/v1/orders/{id}/sales':
    get:
      operationId: order-sales-orders-collection
      tags:
        - Order
      responses:
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '200':
          description: 'SalesOrder collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SalesOrder'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/SalesOrder.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Sales Orders'
      description: 'Retrieves the collection of SalesOrder resources.'
      parameters:
        -
          name: id
          in: path
          description: 'SalesOrder identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:orders'
  '/api/v1/orders/{id}/transfer-orders':
    get:
      operationId: order-stock-transfers-collection
      tags:
        - Order
      responses:
        '200':
          description: 'Back to back order lines.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockTransfer'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
          links:
            UnloadingAddress:
              name: UnloadingAddress
              operationId: address-item-id
              parameters:
                id: '$response.body#/unloadingAddress'
              format: iri-reference
              description: 'The address where the stock will be unloaded.'
            LoadingAddress:
              name: LoadingAddress
              operationId: address-item-id
              parameters:
                id: '$response.body#/loadingAddress'
              format: iri-reference
              description: 'The address where the current stock is.'
            DestinationPackaging:
              name: DestinationPackaging
              operationId: api_packaging_id_get
              parameters:
                id: '$response.body#/destinationPackaging'
              format: iri-reference
              description: 'The packaging of the destination stock.'
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Stock Transfers'
      description: 'Retrieves the collection of StockTransfer resources.'
      parameters:
        -
          name: id
          in: path
          description: 'The identifier of the order.'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:orders'
  '/api/v1/orders/{id}/transport-orders':
    get:
      operationId: order-transport-orders-collection-id
      tags:
        - Order
      responses:
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '200':
          description: 'TransportOrder collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransportOrder'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/TransportOrder.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Transport Orders'
      description: 'Collection of Transport orders of order'
      parameters:
        -
          name: id
          in: path
          description: 'TransportOrder identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:transport_orders'
  /api/v1/packaging:
    get:
      operationId: api_packaging_get_collection
      tags:
        - Packaging
      responses:
        '200':
          description: 'Packaging collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Packaging'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Packaging.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'All Packaging'
      description: 'Retrieves the collection of Packaging resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
        -
          name: code
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'code[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:root_data'
  '/api/v1/packaging/{id}':
    get:
      operationId: api_packaging_id_get
      tags:
        - Packaging
      responses:
        '200':
          description: 'Packaging resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Packaging'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Packaging.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Packaging
      description: 'Retrieves a Packaging resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Packaging identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:root_data'
  /api/v1/pallets:
    get:
      operationId: pallets-collection-id
      tags:
        - Pallet
      responses:
        '200':
          description: 'Pallet collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pallet'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pallet.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'All Pallets'
      description: 'Retrieves the collection of Pallet resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
        -
          name: opmerking
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'opmerking[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:root_data'
  '/api/v1/pallets/{id}':
    get:
      operationId: pallet-item-id
      tags:
        - Pallet
      responses:
        '200':
          description: 'Pallet resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pallet'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Pallet.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Pallet
      description: 'Retrieves a Pallet resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Pallet identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:root_data'
  /api/v1/payment-conditions:
    get:
      operationId: payment-conditions-collection-id
      tags:
        - 'Payment Condition'
      responses:
        '200':
          description: 'PaymentCondition collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentCondition'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentCondition.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Payment Conditions'
      description: 'Retrieves the collection of PaymentCondition resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:root_data'
  '/api/v1/payment-conditions/{id}':
    get:
      operationId: payment-condition-item-id
      tags:
        - 'Payment Condition'
      responses:
        '200':
          description: 'PaymentCondition resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCondition'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaymentCondition.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Payment Condition'
      description: 'Retrieves a PaymentCondition resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PaymentCondition identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:root_data'
  /api/v1/products:
    get:
      operationId: products-collection-id
      tags:
        - Product
      responses:
        '200':
          description: 'Product collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/Product.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Products
      description: 'Retrieves the collection of Product resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
        -
          name: code
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:products'
  '/api/v1/products/{id}':
    get:
      operationId: product-item-id
      tags:
        - Product
      responses:
        '200':
          description: 'Product resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Product.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Product
      description: 'Get product by Id'
      parameters:
        -
          name: id
          in: path
          description: 'Product identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:products'
  /api/v1/production-orders:
    get:
      operationId: api_production-orders_get_collection
      tags:
        - Production
      responses:
        '200':
          description: 'Production collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Production'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/Production.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Production orders'
      description: 'Retrieves the collection of Production resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:production'
  '/api/v1/production-orders/{id}':
    get:
      operationId: api_production-orders_id_get
      tags:
        - Production
      responses:
        '200':
          description: 'Production resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Production'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Production.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Production order'
      description: 'Retrieves a Production resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Production identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:production'
  /api/v1/purchase-invoices:
    get:
      operationId: purchase-invoices-collection-id
      tags:
        - 'Purchase Invoice'
      responses:
        '200':
          description: 'PurchaseInvoice collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseInvoice'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/PurchaseInvoice.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Purchase Invoices'
      description: 'Retrieves the collection of PurchaseInvoice resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:purchaseInvoice'
  '/api/v1/purchase-invoices/{id}':
    get:
      operationId: purchase-invoices-item-id
      tags:
        - 'Purchase Invoice'
      responses:
        '200':
          description: 'PurchaseInvoice resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseInvoice'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PurchaseInvoice.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Purchase Invoice'
      description: 'Retrieves a PurchaseInvoice resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PurchaseInvoice identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:purchaseInvoice'
  /api/v1/addresses:
    get:
      operationId: addresses-collection-id
      tags:
        - Relation
      responses:
        '200':
          description: 'Address collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Addresses
      description: 'Retrieves the collection of Address resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:relations'
  '/api/v1/addresses/{id}':
    get:
      operationId: address-item-id
      tags:
        - Relation
      responses:
        '200':
          description: 'Address resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Address
      description: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Address identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:relations'
  /api/v1/contacts:
    get:
      operationId: contacts-collection-id
      tags:
        - Relation
      responses:
        '200':
          description: 'Contact collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/Contact.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Relation Contacts'
      description: 'Retrieves the collection of Contact resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:relations'
  '/api/v1/contacts/{id}':
    get:
      operationId: contacts-item-id
      tags:
        - Relation
      responses:
        '200':
          description: 'Contact resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contact.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Relation Contact'
      description: 'Retrieves a Contact resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Contact identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:relations'
  /api/v1/relations:
    get:
      operationId: relations-collection-id
      tags:
        - Relation
      responses:
        '200':
          description: 'Relation collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/Relation.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Relations
      description: 'Retrieves the collection of Relation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:relations'
  '/api/v1/relations/{id}':
    get:
      operationId: relations-item-id
      tags:
        - Relation
      responses:
        '200':
          description: 'Relation resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Relation.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Relation
      description: 'Retrieves a Relation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Relation identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:relations'
  '/api/v1/relations/{id}/addresses':
    get:
      operationId: relation-addresses-collection
      tags:
        - Relation
      responses:
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '200':
          description: 'Address collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Relation Addresses'
      description: 'Retrieves the collection of Address resources.'
      parameters:
        -
          name: id
          in: path
          description: 'Relation identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:relations'
  '/api/v1/relations/{id}/contacts':
    get:
      operationId: relation-contacts-collection-id
      tags:
        - Relation
      responses:
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '200':
          description: 'Contact collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Relation Contacts'
      description: 'Retrieves the collection of Contact resources.'
      parameters:
        -
          name: id
          in: path
          description: 'Relation identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:relations'
  /api/v1/sales-invoices:
    get:
      operationId: sales-invoices-collection-id
      tags:
        - 'Sales Invoice'
      responses:
        '200':
          description: 'SalesInvoice collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SalesInvoice'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/SalesInvoice.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Sales Invoices'
      description: 'Retrieves the collection of SalesInvoice resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
        -
          name: type
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'type[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:sales_invoice'
  '/api/v1/sales-invoices/{id}':
    get:
      operationId: sales-invoices-item-id
      tags:
        - 'Sales Invoice'
      responses:
        '200':
          description: 'SalesInvoice resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesInvoice'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SalesInvoice.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Sales Invoice'
      description: 'Retrieves a SalesInvoice resource.'
      parameters:
        -
          name: id
          in: path
          description: 'SalesInvoice identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:sales_invoice'
  '/api/v1/relations/{id}/silos':
    get:
      operationId: relation-silo-collection-id
      tags:
        - Silo
      responses:
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '403':
          description: 'You dont have permission to access this'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '200':
          description: 'Silo collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Silo'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Silo.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Relation silos'
      description: 'Retrieves the collection of Silo resources.'
      parameters:
        -
          name: id
          in: path
          description: 'The relation Id'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:relations'
  /api/v1/silos:
    get:
      operationId: silo-collection-id
      tags:
        - Silo
      responses:
        '200':
          description: 'Silo collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Silo'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Silo.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Silos
      description: 'Retrieves the collection of Silo resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
        -
          name: siloName
          in: query
          description: 'search by silo name'
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:relations'
  '/api/v1/silos/{id}':
    get:
      operationId: silo-item-id
      tags:
        - Silo
      responses:
        '200':
          description: 'Silo resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Silo'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Silo.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Silo
      description: 'Retrieves a Silo resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Silo identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:relations'
  /api/v1/stocks:
    get:
      operationId: stocks-collection-id
      tags:
        - Stock
      responses:
        '200':
          description: 'Stock collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stock'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/Stock.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Stocks
      description: 'Retrieves the collection of Stock resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:stock'
  '/api/v1/stocks/{id}':
    get:
      operationId: stock-item-id
      tags:
        - Stock
      responses:
        '200':
          description: 'Stock resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Stock.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Stock
      description: 'Retrieves a Stock resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Stock identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:stock'
  /api/v1/subsidiaries:
    get:
      operationId: subsidiaries-collection-id
      tags:
        - Subsidiary
      responses:
        '200':
          description: 'Subsidiary collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subsidiary'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links: { type: object, properties: { self: { type: string, format: iri-reference }, first: { type: string, format: iri-reference }, prev: { type: string, format: iri-reference }, next: { type: string, format: iri-reference }, last: { type: string, format: iri-reference } }, example: { self: string, first: string, prev: string, next: string, last: string } }
                  meta: { type: object, properties: { totalItems: { type: integer, minimum: 0 }, itemsPerPage: { type: integer, minimum: 0 }, currentPage: { type: integer, minimum: 0 } } }
                  data: { type: array, items: { $ref: '#/components/schemas/Subsidiary.jsonapi' } }
                required:
                  - data
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Subsidiaries
      description: 'Retrieves the collection of Subsidiary resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:root_data'
  '/api/v1/subsidiaries/{id}':
    get:
      operationId: subsidiary-item-id
      tags:
        - Subsidiary
      responses:
        '200':
          description: 'Subsidiary resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subsidiary'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Subsidiary.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: Subsidiary
      description: 'Get Subsidiary by identifier'
      parameters:
        -
          name: id
          in: path
          description: 'Subsidiary identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:root_data'
  /api/v1/trade-conditions:
    get:
      operationId: trade-conditions-collection-id
      tags:
        - 'Trade Condition'
      responses:
        '200':
          description: 'TradeCondition collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TradeCondition'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TradeCondition.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Trade Conditions'
      description: 'Retrieves the collection of TradeCondition resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:root_data'
  '/api/v1/trade-conditions/{id}':
    get:
      operationId: trade-condition-item-id
      tags:
        - 'Trade Condition'
      responses:
        '200':
          description: 'TradeCondition resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeCondition'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TradeCondition.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Trade Condition'
      description: 'Retrieves a TradeCondition resource.'
      parameters:
        -
          name: id
          in: path
          description: 'TradeCondition identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:root_data'
  /api/v1/transport-orders:
    get:
      operationId: transport-orders-collection
      tags:
        - 'Transport order'
      responses:
        '200':
          description: 'TransportOrder collection'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransportOrder'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransportOrder.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Transport Orders'
      description: 'Retrieves the collection of TransportOrder resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
            minimum: 1
            format: int32
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:transport_orders'
  '/api/v1/transport-orders/{id}':
    get:
      operationId: transport-order-item
      tags:
        - 'Transport order'
      responses:
        '200':
          description: 'TransportOrder resource'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransportOrder'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TransportOrder.jsonapi'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '404':
          description: 'Resource not found'
          headers:
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '429':
          description: 'Too Many Requests - The client has exceeded the rate limit'
          content: {  }
          headers:
            Retry-After:
              description: 'The number of seconds to wait before retrying'
              schema:
                type: integer
            X-RateLimit-Window:
              description: 'The rate limit time window in seconds'
              schema:
                type: integer
            X-RateLimit-Limit:
              description: 'The maximum number of requests allowed in the rate limit time window'
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: 'The number of remaining requests in the current rate limit time window'
              schema:
                type: integer
        '401':
          description: 'Missing valid authentication'
      summary: 'Transport Order'
      description: 'Retrieves a TransportOrder resource.'
      parameters:
        -
          name: id
          in: path
          description: 'TransportOrder identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        -
          api_user_token:
            - 'read:transport_orders'
components:
  schemas:
    Address:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          example: '1234'
          type: integer
        addressLine:
          example: '123 Main Street'
          type: string
        relation:
          example: 'Branch Office'
          type:
            - string
            - 'null'
        addressLine2:
          example: 'Suite 456'
          type: string
        addressLine3:
          example: 'Building A'
          type: string
        overriddenCompanyName:
          example: 'Acme Corporation'
          type: string
        phone:
          example: +1-555-123-4567
          type: string
        fax:
          example: +1-555-987-6543
          type: string
        country:
          example: 'United States'
          type: string
        city:
          example: 'New York'
          type: string
        email:
          example: contact@example.com
          type: string
        zipCode:
          example: '10001'
          type: string
        correspondencePreference:
          example: email
          type: string
        ubn:
          example: '123456789'
          type: string
        remarks:
          example: 'Special handling required'
          type: string
        isMailingAddress:
          example: true
          type: boolean
        isLoadingUnloadingLocation:
          example: true
          type: boolean
        isInvoicingAddress:
          example: true
          type: boolean
        isManufacturer:
          type: boolean
        isFactory:
          type: boolean
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
          examples:
            -
              key: silo_address
              value: 'Jeep and co'
            -
              key: factory_number
              value: '122345'
    Address.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  example: '1234'
                  type: integer
                addressLine:
                  example: '123 Main Street'
                  type: string
                relation:
                  example: 'Branch Office'
                  type: [string, 'null']
                addressLine2:
                  example: 'Suite 456'
                  type: string
                addressLine3:
                  example: 'Building A'
                  type: string
                overriddenCompanyName:
                  example: 'Acme Corporation'
                  type: string
                phone:
                  example: +1-555-123-4567
                  type: string
                fax:
                  example: +1-555-987-6543
                  type: string
                country:
                  example: 'United States'
                  type: string
                city:
                  example: 'New York'
                  type: string
                email:
                  example: contact@example.com
                  type: string
                zipCode:
                  example: '10001'
                  type: string
                correspondencePreference:
                  example: email
                  type: string
                ubn:
                  example: '123456789'
                  type: string
                remarks:
                  example: 'Special handling required'
                  type: string
                isMailingAddress:
                  example: true
                  type: boolean
                isLoadingUnloadingLocation:
                  example: true
                  type: boolean
                isInvoicingAddress:
                  example: true
                  type: boolean
                isManufacturer:
                  type: boolean
                isFactory:
                  type: boolean
                customFields:
                  type: array
                  items: { $ref: '#/components/schemas/CustomField' }
                  examples: [{ key: silo_address, value: 'Jeep and co' }, { key: factory_number, value: '122345' }]
          required:
            - type
            - id
    Attachment:
      type: object
      description: ''
      deprecated: false
      required:
        - filename
        - file
      properties:
        filename:
          type: string
        size:
          readOnly: true
          type: integer
        file:
          writeOnly: true
          description: 'Base64 encoded file data'
          type: string
    Attachment.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                filename:
                  type: string
                size:
                  readOnly: true
                  type: integer
                file:
                  writeOnly: true
                  description: 'Base64 encoded file data'
                  type: string
              required:
                - filename
                - file
          required:
            - type
            - id
    BackToBackOrder:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          type: string
        isFinalized:
          type: boolean
        orderDisplayNumber:
          type: string
        buyer:
          type: string
        salesContract:
          type: string
        seller:
          type: string
        purchaseContract:
          type: string
        purchaseQuantity:
          type: number
        salesQuantity:
          type: number
        purchaseGrossWeight:
          type: number
        salesGrossWeight:
          type: number
        finalized:
          type: boolean
        salesPackingCount:
          type: number
        salesQuantityPerPacking:
          type: number
        loadingRemarks:
          type: string
        loadingReference:
          type: string
        unloadingRemarks:
          type: string
        unloadingReference:
          type: string
        origin:
          type: string
        specificInstructions:
          type: string
        supplierInstructions:
          type: string
        salesOrderReference:
          type: string
        manufacturingDate:
          type:
            - string
            - 'null'
          format: date-time
        expiryDate:
          type:
            - string
            - 'null'
          format: date-time
        purchasePackaging:
          type:
            - string
            - 'null'
        salesPackaging:
          type:
            - string
            - 'null'
    BackToBackOrder.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  type: string
                isFinalized:
                  type: boolean
                orderDisplayNumber:
                  type: string
                buyer:
                  type: string
                salesContract:
                  type: string
                seller:
                  type: string
                purchaseContract:
                  type: string
                purchaseQuantity:
                  type: number
                salesQuantity:
                  type: number
                purchaseGrossWeight:
                  type: number
                salesGrossWeight:
                  type: number
                finalized:
                  type: boolean
                salesPackingCount:
                  type: number
                salesQuantityPerPacking:
                  type: number
                loadingRemarks:
                  type: string
                loadingReference:
                  type: string
                unloadingRemarks:
                  type: string
                unloadingReference:
                  type: string
                origin:
                  type: string
                specificInstructions:
                  type: string
                supplierInstructions:
                  type: string
                salesOrderReference:
                  type: string
                manufacturingDate:
                  type: [string, 'null']
                  format: date-time
                expiryDate:
                  type: [string, 'null']
                  format: date-time
                purchasePackaging:
                  type: [string, 'null']
                salesPackaging:
                  type: [string, 'null']
          required:
            - type
            - id
    BrokerAgreement:
      type: object
      description: ''
      deprecated: false
      properties:
        broker:
          type: string
        contractBasis:
          type: string
          enum:
            - agreedQuantity
            - actualQuantity
          example: agreedQuantity
        type:
          type: string
        contractNumber:
          type: string
        price:
          type: number
        currencyCode:
          type:
            - string
            - 'null'
        percentage:
          type:
            - number
            - 'null'
    BrokerAgreement.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                broker:
                  type: string
                contractBasis:
                  type: string
                  enum: [agreedQuantity, actualQuantity]
                  example: agreedQuantity
                type:
                  type: string
                contractNumber:
                  type: string
                price:
                  type: number
                currencyCode:
                  type: [string, 'null']
                percentage:
                  type: [number, 'null']
          required:
            - type
            - id
    Contact:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          example: '123'
          type: string
        inserts:
          example: '123'
          type: string
        name:
          example: 'Rowan samson'
          type: string
        firstName:
          example: Rowan
          type: string
        phone:
          example: 123.123.1234
          type: string
        email:
          example: sam@test.com
          type:
            - string
            - 'null'
          format: email
        fax:
          example: '+12 123 123 1234'
          type: string
        initials:
          example: Mr
          type: string
        gender:
          example: Male
          type: string
        function:
          example: Manager
          type: string
        active:
          example: 'true'
          type: boolean
        associatedRelation:
          example: /api/v1/relations/123
          type: string
          format: uri-reference
    Contact.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  example: '123'
                  type: string
                inserts:
                  example: '123'
                  type: string
                name:
                  example: 'Rowan samson'
                  type: string
                firstName:
                  example: Rowan
                  type: string
                phone:
                  example: 123.123.1234
                  type: string
                email:
                  example: sam@test.com
                  type: [string, 'null']
                  format: email
                fax:
                  example: '+12 123 123 1234'
                  type: string
                initials:
                  example: Mr
                  type: string
                gender:
                  example: Male
                  type: string
                function:
                  example: Manager
                  type: string
                active:
                  example: 'true'
                  type: boolean
                associatedRelation:
                  example: /api/v1/relations/123
                  type: string
                  format: uri-reference
          required:
            - type
            - id
    ContainerOrder:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          type: string
        lines:
          type: array
          items:
            $ref: '#/components/schemas/ContainerOrderLine'
        displayNumber:
          readOnly: true
          type: string
        blNumber:
          readOnly: true
          type: string
        loadingDate:
          type: string
          format: date-time
        unloadingDate:
          type: string
          format: date-time
        destinationArrivalDateTime:
          type: string
          format: date-time
        destinationDepartureDateTime:
          type: string
          format: date-time
        customFields:
          type: object
          additionalProperties:
            type: string
    ContainerOrder.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  type: string
                lines:
                  type: array
                  items: { $ref: '#/components/schemas/ContainerOrderLine.jsonapi' }
                displayNumber:
                  readOnly: true
                  type: string
                blNumber:
                  readOnly: true
                  type: string
                loadingDate:
                  type: string
                  format: date-time
                unloadingDate:
                  type: string
                  format: date-time
                destinationArrivalDateTime:
                  type: string
                  format: date-time
                destinationDepartureDateTime:
                  type: string
                  format: date-time
                customFields:
                  type: object
                  additionalProperties: { type: string }
          required:
            - type
            - id
    ContainerOrderLine:
      type: object
      description: ''
      deprecated: false
      properties:
        lineId:
          description: 'Combination of source line and destination line separated by underscore'
          type: string
        finalized:
          readOnly: true
          description: 'Finalized status of the line'
          type: boolean
        containerNumber:
          description: 'Loading reference'
          type: string
        sourceQuantity:
          description: 'Net weight according to shipper in kg'
          type: number
        destinationQuantity:
          description: 'Net weight as weighed at factory in kg'
          type: number
        preFinalized:
          type: boolean
    ContainerOrderLine.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                lineId:
                  description: 'Combination of source line and destination line separated by underscore'
                  type: string
                finalized:
                  readOnly: true
                  description: 'Finalized status of the line'
                  type: boolean
                containerNumber:
                  description: 'Loading reference'
                  type: string
                sourceQuantity:
                  description: 'Net weight according to shipper in kg'
                  type: number
                destinationQuantity:
                  description: 'Net weight as weighed at factory in kg'
                  type: number
                preFinalized:
                  type: boolean
          required:
            - type
            - id
    Contract:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          type: string
        displayNumber:
          type:
            - string
            - 'null'
        contractType:
          type: string
          enum:
            - purchase
            - sales
          example: purchase
        contractDate:
          type: string
          format: date
          example: '2024-01-01'
        subsidiary:
          type: string
          format: uri-reference
          example: /api/v1/subsidiaries/demo
        counterContract:
          example: CON-1234
          type:
            - string
            - 'null'
        relation:
          type: string
          format: uri-reference
          example: /api/v1/relation/123
        paymentCondition:
          type: string
          format: uri-reference
          example: /api/v1/payment-conditions/123
        currencyCode:
          example: EUR
          type:
            - string
            - 'null'
        exchangeRate:
          example: '1.00000'
          type: number
        loadingAddress:
          type: string
          format: uri-reference
          example: /api/v1/addresses/123
        loadingAddressText:
          example: 'Some loading address text'
          type: string
        contractLines:
          type: array
          items:
            $ref: '#/components/schemas/ContractLineReadApi'
        supplierReference:
          example: REF-1234
          type: string
        contractRemarks:
          example: 'contract is valid until 2024-01-01'
          type: string
        schedule:
          example: 'In september '
          type: string
        remarksForInvoiceDepartment:
          example: 'invoicing remarks'
          type: string
        positionOverviewRemarks:
          example: 'position overview remarks'
          type: string
        internalRemarks:
          example: 'internal remarks'
          type: string
        theirVatNumber:
          anyOf:
            -
              $ref: '#/components/schemas/VatRegistration'
            -
              type: 'null'
        ourVatNumber:
          anyOf:
            -
              $ref: '#/components/schemas/VatRegistration'
            -
              type: 'null'
        textLines:
          type: array
          items:
            $ref: '#/components/schemas/TextLine'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    Contract.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  type: string
                displayNumber:
                  type: [string, 'null']
                contractType:
                  type: string
                  enum: [purchase, sales]
                  example: purchase
                contractDate:
                  type: string
                  format: date
                  example: '2024-01-01'
                subsidiary:
                  type: string
                  format: uri-reference
                  example: /api/v1/subsidiaries/demo
                counterContract:
                  example: CON-1234
                  type: [string, 'null']
                relation:
                  type: string
                  format: uri-reference
                  example: /api/v1/relation/123
                paymentCondition:
                  type: string
                  format: uri-reference
                  example: /api/v1/payment-conditions/123
                currencyCode:
                  example: EUR
                  type: [string, 'null']
                exchangeRate:
                  example: '1.00000'
                  type: number
                loadingAddress:
                  type: string
                  format: uri-reference
                  example: /api/v1/addresses/123
                loadingAddressText:
                  example: 'Some loading address text'
                  type: string
                contractLines:
                  type: array
                  items: { $ref: '#/components/schemas/ContractLineReadApi.jsonapi' }
                supplierReference:
                  example: REF-1234
                  type: string
                contractRemarks:
                  example: 'contract is valid until 2024-01-01'
                  type: string
                schedule:
                  example: 'In september '
                  type: string
                remarksForInvoiceDepartment:
                  example: 'invoicing remarks'
                  type: string
                positionOverviewRemarks:
                  example: 'position overview remarks'
                  type: string
                internalRemarks:
                  example: 'internal remarks'
                  type: string
                theirVatNumber:
                  anyOf: [{ $ref: '#/components/schemas/VatRegistration.jsonapi' }, { type: 'null' }]
                ourVatNumber:
                  anyOf: [{ $ref: '#/components/schemas/VatRegistration.jsonapi' }, { type: 'null' }]
                textLines:
                  type: array
                  items: { $ref: '#/components/schemas/TextLine.jsonapi' }
                customFields:
                  type: array
                  items: { $ref: '#/components/schemas/CustomField.jsonapi' }
          required:
            - type
            - id
    ContractLineReadApi:
      type: object
      description: ''
      deprecated: false
      properties:
        contractDisplayNumber:
          type: string
        product:
          type:
            - string
            - 'null'
        packaging:
          type:
            - string
            - 'null'
        quantityPerPackaging:
          type: number
        packingCount:
          type: number
        quantity:
          type: number
        price:
          type: number
        plannedQuantity:
          type: number
        amortizedQuantity:
          type: number
        pricingFactor:
          type:
            - integer
            - 'null'
        pricingUnitCode:
          type: string
        dryMatterPart:
          type: number
        referencePricePerTon:
          type: number
        productSpecification:
          type: string
        pricingType:
          type: string
        sampleInstruction:
          type: string
        analysisInstruction:
          type: string
        stackingDetails:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        brokerAgreements:
          type: array
          items:
            $ref: '#/components/schemas/BrokerAgreement'
        productAnalysis:
          type: array
          items:
            $ref: '#/components/schemas/ProductAnalysis'
    ContractLineReadApi.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                contractDisplayNumber:
                  type: string
                product:
                  type: [string, 'null']
                packaging:
                  type: [string, 'null']
                quantityPerPackaging:
                  type: number
                packingCount:
                  type: number
                quantity:
                  type: number
                price:
                  type: number
                plannedQuantity:
                  type: number
                amortizedQuantity:
                  type: number
                pricingFactor:
                  type: [integer, 'null']
                pricingUnitCode:
                  type: string
                dryMatterPart:
                  type: number
                referencePricePerTon:
                  type: number
                productSpecification:
                  type: string
                pricingType:
                  type: string
                sampleInstruction:
                  type: string
                analysisInstruction:
                  type: string
                stackingDetails:
                  type: string
                customFields:
                  type: array
                  items: { $ref: '#/components/schemas/CustomField.jsonapi' }
                brokerAgreements:
                  type: array
                  items: { $ref: '#/components/schemas/BrokerAgreement.jsonapi' }
                productAnalysis:
                  type: array
                  items: { $ref: '#/components/schemas/ProductAnalysis.jsonapi' }
          required:
            - type
            - id
    Country:
      type: object
      description: ''
      deprecated: false
      properties:
        code:
          type: string
        name:
          type: string
        isEuMember:
          type: boolean
    Country.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                code:
                  type: string
                name:
                  type: string
                isEuMember:
                  type: boolean
          required:
            - type
            - id
    CustomField:
      type: object
      description: ''
      deprecated: false
      properties:
        key:
          example: departure
          type: string
        value:
          example: '3pm nl'
          oneOf:
            -
              type: string
            -
              type: boolean
            -
              type: number
              format: integer
            -
              type: number
              format: float
            -
              type: 'null'
            -
              type: array
              items:
                oneOf:
                  - { type: string }
                  - { type: number, format: integer }
                  - { type: number, format: float }
                  - { type: boolean }
                  - { type: 'null' }
    CustomField.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                key:
                  example: departure
                  type: string
                value:
                  example: '3pm nl'
                  oneOf: [{ type: string }, { type: boolean }, { type: number, format: integer }, { type: number, format: float }, { type: 'null' }, { type: array, items: { oneOf: [{ type: string }, { type: number, format: integer }, { type: number, format: float }, { type: boolean }, { type: 'null' }] } }]
          required:
            - type
            - id
    CustomFields:
      type: object
      description: ''
      deprecated: false
    CustomFields.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties: []
          required:
            - type
            - id
    Me:
      type: object
      description: |-
        Both of the above suppressions are due to the fact that this class is a DTO
        and allows partial initialization (PATCH) requests.
        Psalm is being annoying, these rules are absolutely useless in most cases.
      deprecated: false
      properties:
        id:
          readOnly: true
          type: string
        name:
          readOnly: true
          example: qbil
          type: string
        expiresAt:
          readOnly: true
          type: string
          format: date-time
        allowedSubsidiaries:
          readOnly: true
          type: array
          items:
            type: string
        permissions:
          readOnly: true
          type: array
          items:
            type: string
            enum:
              - 'read:root_data'
              - 'read:orders'
              - 'read:stock'
              - 'read:relations'
              - 'read:sales_invoice'
              - 'read:contracts'
              - 'read:products'
              - 'read:transport_orders'
              - 'read:purchaseInvoice'
              - 'read:production'
              - 'write:orders'
        webhooks:
          readOnly: true
          type: array
          items:
            type: string
            enum:
              - relation.changed
              - container_order.changed
        webhookUrl:
          type:
            - string
            - 'null'
    Me.jsonapi:
      type: object
      description: |-
        Both of the above suppressions are due to the fact that this class is a DTO
        and allows partial initialization (PATCH) requests.
        Psalm is being annoying, these rules are absolutely useless in most cases.
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  readOnly: true
                  type: string
                name:
                  readOnly: true
                  example: qbil
                  type: string
                expiresAt:
                  readOnly: true
                  type: string
                  format: date-time
                allowedSubsidiaries:
                  readOnly: true
                  type: array
                  items: { type: string }
                permissions:
                  readOnly: true
                  type: array
                  items: { type: string, enum: ['read:root_data', 'read:orders', 'read:stock', 'read:relations', 'read:sales_invoice', 'read:contracts', 'read:products', 'read:transport_orders', 'read:purchaseInvoice', 'read:production', 'write:orders'] }
                webhooks:
                  readOnly: true
                  type: array
                  items: { type: string, enum: [relation.changed, container_order.changed] }
                webhookUrl:
                  type: [string, 'null']
          required:
            - type
            - id
    Mutation:
      type: object
      description: ''
      deprecated: false
      properties:
        type:
          type: string
        quantity:
          type: number
        unit:
          type: string
        date:
          type:
            - string
            - 'null'
    Mutation.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                type:
                  type: string
                quantity:
                  type: number
                unit:
                  type: string
                date:
                  type: [string, 'null']
          required:
            - type
            - id
    Order:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          type: string
        subsidiary:
          type: string
        displayNumber:
          type: string
        blNumber:
          type: string
        notes:
          type: string
        transporterBookingNo:
          type: string
        licensePlate:
          type: string
        transportOrder:
          type:
            - string
            - 'null'
        arrivalDate:
          type:
            - string
            - 'null'
          format: date-time
        departureDate:
          type:
            - string
            - 'null'
          format: date-time
        blDate:
          type:
            - string
            - 'null'
          format: date-time
        loadingDate:
          type:
            - string
            - 'null'
          format: date-time
        userResponsible:
          type: array
          items:
            type: string
    Order.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  type: string
                subsidiary:
                  type: string
                displayNumber:
                  type: string
                blNumber:
                  type: string
                notes:
                  type: string
                transporterBookingNo:
                  type: string
                licensePlate:
                  type: string
                transportOrder:
                  type: [string, 'null']
                arrivalDate:
                  type: [string, 'null']
                  format: date-time
                departureDate:
                  type: [string, 'null']
                  format: date-time
                blDate:
                  type: [string, 'null']
                  format: date-time
                loadingDate:
                  type: [string, 'null']
                  format: date-time
                userResponsible:
                  type: array
                  items: { type: string }
          required:
            - type
            - id
    OrderAttachments:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: string
        orderDisplayNumber:
          readOnly: true
          example: ABC-123
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    OrderAttachments.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  readOnly: true
                  type: string
                orderDisplayNumber:
                  readOnly: true
                  example: ABC-123
                  type: string
                attachments:
                  type: array
                  items: { $ref: '#/components/schemas/Attachment.jsonapi' }
          required:
            - type
            - id
    Packaging:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          type: string
        code:
          example: PACK001
          type: string
        quantityPerPacking:
          example: 400
          type: number
        tare:
          example: 2.225
          type:
            - number
            - 'null'
        dimensions:
          example: 'width x height x depth'
          type: string
        remarks:
          example: 'some remarks about packaging'
          type: string
        unit:
          example: kg
          type: string
        descriptions:
          type: array
          items:
            type: object
            properties:
              language:
                type: string
              description:
                type: string
            example:
              -
                language: en_EN
                description: 'Sweet edible wheypowder, FEED grad'
              -
                language: nl_NL
                description: 'Zoet eetbaar weipoeder, FEED grad'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    Packaging.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  type: string
                code:
                  example: PACK001
                  type: string
                quantityPerPacking:
                  example: 400
                  type: number
                tare:
                  example: 2.225
                  type: [number, 'null']
                dimensions:
                  example: 'width x height x depth'
                  type: string
                remarks:
                  example: 'some remarks about packaging'
                  type: string
                unit:
                  example: kg
                  type: string
                descriptions:
                  type: array
                  items: { type: object, properties: { language: { type: string }, description: { type: string } }, example: [{ language: en_EN, description: 'Sweet edible wheypowder, FEED grad' }, { language: nl_NL, description: 'Zoet eetbaar weipoeder, FEED grad' }] }
                customFields:
                  type: array
                  items: { $ref: '#/components/schemas/CustomField.jsonapi' }
          required:
            - type
            - id
    Pallet:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          writeOnly: true
          type: string
        code:
          example: PAL001
          type: string
        weight:
          example: 120
          type: number
        descriptions:
          type: array
          items:
            type: object
            properties:
              language:
                type: string
              description:
                type: string
            example:
              -
                language: en_EN
                description: 'Sweet edible wheypowder, FEED grad'
              -
                language: nl_NL
                description: 'Zoet eetbaar weipoeder, FEED grad'
    Pallet.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  writeOnly: true
                  type: string
                code:
                  example: PAL001
                  type: string
                weight:
                  example: 120
                  type: number
                descriptions:
                  type: array
                  items: { type: object, properties: { language: { type: string }, description: { type: string } }, example: [{ language: en_EN, description: 'Sweet edible wheypowder, FEED grad' }, { language: nl_NL, description: 'Zoet eetbaar weipoeder, FEED grad' }] }
          required:
            - type
            - id
    PaymentCondition:
      type: object
      description: ''
      deprecated: false
      properties:
        code:
          example: PC001
          type: string
        isActive:
          example: true
          type: boolean
        paymentMethod:
          example: 'Invoice by email'
          type: string
        dueAmountInDays:
          example: 30
          type: integer
        remarks:
          example: 'Payment condition remarks'
          type: string
        creditRisk:
          example: 'Credit risk'
          type: string
        percentageInAdvance:
          example: '10'
          type: string
        descriptions:
          type: array
          items:
            type: object
            properties:
              language:
                type: string
              description:
                type: string
            example:
              -
                language: en_EN
                description: 'Sweet edible wheypowder, FEED grad'
              -
                language: nl_NL
                description: 'Zoet eetbaar weipoeder, FEED grad'
    PaymentCondition.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                code:
                  example: PC001
                  type: string
                isActive:
                  example: true
                  type: boolean
                paymentMethod:
                  example: 'Invoice by email'
                  type: string
                dueAmountInDays:
                  example: 30
                  type: integer
                remarks:
                  example: 'Payment condition remarks'
                  type: string
                creditRisk:
                  example: 'Credit risk'
                  type: string
                percentageInAdvance:
                  example: '10'
                  type: string
                descriptions:
                  type: array
                  items: { type: object, properties: { language: { type: string }, description: { type: string } }, example: [{ language: en_EN, description: 'Sweet edible wheypowder, FEED grad' }, { language: nl_NL, description: 'Zoet eetbaar weipoeder, FEED grad' }] }
          required:
            - type
            - id
    Product:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          type: string
        productCode:
          example: 'Milk powder'
          type: string
        productGroup:
          description: 'The group details for the product'
          type: object
          example:
            id: '10'
            name: Dairy
            displayNumber: '0010'
        gnCode:
          example: '04022199'
          type: string
        taricCode:
          example: '123125'
          type: string
        tariefCode:
          example: '0402 21'
          type: string
        idtfNumber:
          example: '0402 21 99'
          type: string
        specification:
          example: 'some product specification'
          type: string
        remarks:
          example: 'some product remarks'
          type: string
        liquid:
          type: boolean
        inActive:
          type: boolean
        futureProduct:
          example: true
          type: boolean
        dangerous:
          type: boolean
        purchaseRestricted:
          example: true
          type: boolean
        salesRestricted:
          type: boolean
        descriptions:
          type: array
          items:
            type: object
            properties:
              language:
                type: string
              description:
                type: string
            example:
              -
                language: en_EN
                description: 'Sweet edible wheypowder, FEED grad'
              -
                language: nl_NL
                description: 'Zoet eetbaar weipoeder, FEED grad'
        packaging:
          type:
            - string
            - 'null'
          format: uri-reference
          example: /api/packaging/bigbags
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        availableInSubsidiaries:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
    Product.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  type: string
                productCode:
                  example: 'Milk powder'
                  type: string
                productGroup:
                  description: 'The group details for the product'
                  type: object
                  example: { id: '10', name: Dairy, displayNumber: '0010' }
                gnCode:
                  example: '04022199'
                  type: string
                taricCode:
                  example: '123125'
                  type: string
                tariefCode:
                  example: '0402 21'
                  type: string
                idtfNumber:
                  example: '0402 21 99'
                  type: string
                specification:
                  example: 'some product specification'
                  type: string
                remarks:
                  example: 'some product remarks'
                  type: string
                liquid:
                  type: boolean
                inActive:
                  type: boolean
                futureProduct:
                  example: true
                  type: boolean
                dangerous:
                  type: boolean
                purchaseRestricted:
                  example: true
                  type: boolean
                salesRestricted:
                  type: boolean
                descriptions:
                  type: array
                  items: { type: object, properties: { language: { type: string }, description: { type: string } }, example: [{ language: en_EN, description: 'Sweet edible wheypowder, FEED grad' }, { language: nl_NL, description: 'Zoet eetbaar weipoeder, FEED grad' }] }
                packaging:
                  type: [string, 'null']
                  format: uri-reference
                  example: /api/packaging/bigbags
                customFields:
                  type: array
                  items: { $ref: '#/components/schemas/CustomField.jsonapi' }
            relationships:
              type: object
              properties:
                availableInSubsidiaries:
                  properties: { data: { type: array, items: { type: object, properties: { type: { type: string }, id: { type: string, format: iri-reference } } } } }
          required:
            - type
            - id
        included:
          description: 'Related resources requested via the "include" query parameter.'
          type: array
          items:
            anyOf:
              -
                $ref: '#/components/schemas/Product.jsonapi'
          readOnly: true
          externalDocs:
            url: 'https://jsonapi.org/format/#fetching-includes'
    ProductAnalysis:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          type: string
        value:
          type: string
    ProductAnalysis.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: string
          required:
            - type
            - id
    Production:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          type: string
        displayNumber:
          example: PROD-12345
          type: string
        subsidiary:
          example: Demo
          type: string
        finalized:
          example: 'true'
          type: boolean
        productionDate:
          type: string
          format: date
          example: '2024-01-01'
        warehouse:
          type: string
          format: uri-reference
          example: /api/v1/addresses/111
        unitCode:
          example: Kg
          type: string
        treatment:
          example: 'Test treatment'
          type: string
        remarks:
          example: 'some remarks'
          type: string
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/ProductionIngredient'
        productionResults:
          type: array
          items:
            $ref: '#/components/schemas/ProductionResult'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    Production.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  type: string
                displayNumber:
                  example: PROD-12345
                  type: string
                subsidiary:
                  example: Demo
                  type: string
                finalized:
                  example: 'true'
                  type: boolean
                productionDate:
                  type: string
                  format: date
                  example: '2024-01-01'
                warehouse:
                  type: string
                  format: uri-reference
                  example: /api/v1/addresses/111
                unitCode:
                  example: Kg
                  type: string
                treatment:
                  example: 'Test treatment'
                  type: string
                remarks:
                  example: 'some remarks'
                  type: string
                ingredients:
                  type: array
                  items: { $ref: '#/components/schemas/ProductionIngredient.jsonapi' }
                productionResults:
                  type: array
                  items: { $ref: '#/components/schemas/ProductionResult.jsonapi' }
                customFields:
                  type: array
                  items: { $ref: '#/components/schemas/CustomField.jsonapi' }
          required:
            - type
            - id
    ProductionIngredient:
      type: object
      description: ''
      deprecated: false
      properties:
        product:
          type: string
          format: uri-reference
          example: /api/v1/product/123
        packaging:
          type: string
          format: uri-reference
          example: /api/v1/packaging/bigbags
        productSpecification:
          example: 'product specification'
          type: string
        remarks:
          example: remarks
          type: string
        packingCount:
          example: 10
          type: integer
        quantity:
          example: 100.0
          type: number
    ProductionIngredient.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                product:
                  type: string
                  format: uri-reference
                  example: /api/v1/product/123
                packaging:
                  type: string
                  format: uri-reference
                  example: /api/v1/packaging/bigbags
                productSpecification:
                  example: 'product specification'
                  type: string
                remarks:
                  example: remarks
                  type: string
                packingCount:
                  example: 10
                  type: integer
                quantity:
                  example: 100.0
                  type: number
          required:
            - type
            - id
    ProductionResult:
      type: object
      description: ''
      deprecated: false
      properties:
        product:
          type: string
          format: uri-reference
          example: /api/v1/products/123
        quantity:
          example: 100.0
          type: number
        productSpecification:
          example: 'product specification'
          type: string
        warehouseReference:
          example: REF-123-465
          type: string
        packaging:
          type: string
          format: uri-reference
          example: /api/v1/packaging/123
        packagingSpecification:
          example: 'packaging specification'
          type: string
        description:
          example: 'product valid to use'
          type: string
        packingCount:
          example: 10
          type: integer
        wrapping:
          example: 'Yes'
          type: string
        wrappingSpecification:
          example: 'wrapping specification'
          type: string
        quantityPerPacking:
          example: 11.0
          type: number
        origin:
          example: NL
          type: string
        supplierReference:
          example: SUP-12345
          type: string
        internalRemarksAboutLot:
          example: 'remarks about lot'
          type: string
        label:
          example: LAB-23456
          type: string
        expiryDate:
          type: string
          format: date
          example: '2024-01-01'
        productionDate:
          type: string
          format: date
          example: '2023-01-01'
        customFields:
          $ref: '#/components/schemas/CustomFields'
    ProductionResult.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                product:
                  type: string
                  format: uri-reference
                  example: /api/v1/products/123
                quantity:
                  example: 100.0
                  type: number
                productSpecification:
                  example: 'product specification'
                  type: string
                warehouseReference:
                  example: REF-123-465
                  type: string
                packaging:
                  type: string
                  format: uri-reference
                  example: /api/v1/packaging/123
                packagingSpecification:
                  example: 'packaging specification'
                  type: string
                description:
                  example: 'product valid to use'
                  type: string
                packingCount:
                  example: 10
                  type: integer
                wrapping:
                  example: 'Yes'
                  type: string
                wrappingSpecification:
                  example: 'wrapping specification'
                  type: string
                quantityPerPacking:
                  example: 11.0
                  type: number
                origin:
                  example: NL
                  type: string
                supplierReference:
                  example: SUP-12345
                  type: string
                internalRemarksAboutLot:
                  example: 'remarks about lot'
                  type: string
                label:
                  example: LAB-23456
                  type: string
                expiryDate:
                  type: string
                  format: date
                  example: '2024-01-01'
                productionDate:
                  type: string
                  format: date
                  example: '2023-01-01'
                customFields:
                  $ref: '#/components/schemas/CustomFields.jsonapi'
          required:
            - type
            - id
    PurchaseInvoice:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          example: '123'
          type: string
        displayNumber:
          example: DIS001
          type: string
        subsidiary:
          type: string
          format: uri-reference
          example: /api/v1/subsidiaries/demo
        createdBy:
          example: qbil
          type: string
        creditorInvoiceNumber:
          example: '1256745'
          type: string
        creditor:
          type: string
          format: uri-reference
          example: /api/v1/relations/4000
        invoiceDate:
          type: string
          format: date
          example: '2024-03-01'
        dueDate:
          type: string
          format: date
          example: '2024-04-01'
        paymentDate:
          type: string
          format: date
          example: '2024-04-01'
        currency:
          example: EUR
          type: string
        totalAmount:
          example: 600
          type: number
        amount:
          example: 500
          type: number
        vatAmount:
          example: 100
          type: number
        paidAmount:
          example: 600
          type: number
        grossAmount:
          example: 600
          type: number
        remarks:
          example: 'test remarks'
          type: string
        invoiceLines:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseInvoiceLine'
    PurchaseInvoice.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  example: '123'
                  type: string
                displayNumber:
                  example: DIS001
                  type: string
                subsidiary:
                  type: string
                  format: uri-reference
                  example: /api/v1/subsidiaries/demo
                createdBy:
                  example: qbil
                  type: string
                creditorInvoiceNumber:
                  example: '1256745'
                  type: string
                creditor:
                  type: string
                  format: uri-reference
                  example: /api/v1/relations/4000
                invoiceDate:
                  type: string
                  format: date
                  example: '2024-03-01'
                dueDate:
                  type: string
                  format: date
                  example: '2024-04-01'
                paymentDate:
                  type: string
                  format: date
                  example: '2024-04-01'
                currency:
                  example: EUR
                  type: string
                totalAmount:
                  example: 600
                  type: number
                amount:
                  example: 500
                  type: number
                vatAmount:
                  example: 100
                  type: number
                paidAmount:
                  example: 600
                  type: number
                grossAmount:
                  example: 600
                  type: number
                remarks:
                  example: 'test remarks'
                  type: string
                invoiceLines:
                  type: array
                  items: { $ref: '#/components/schemas/PurchaseInvoiceLine.jsonapi' }
          required:
            - type
            - id
    PurchaseInvoiceLine:
      type: object
      description: ''
      deprecated: false
      properties:
        amount:
          example: 400.0
          type: number
        vatAmount:
          example: 100.0
          type: number
        correctionAmount:
          example: 300.0
          type: number
        assignedAmount:
          example: 100.0
          type: number
        quantity:
          example: 200.0
          type: number
        assignedQuantity:
          example: 100.0
          type: number
        correctionQuantity:
          example: 100.0
          type: number
        creditor:
          example: "Gottlieb-O'Kon"
          type:
            - string
            - 'null'
        type:
          example: transport
          type: string
        description:
          example: 'some description'
          type: string
    PurchaseInvoiceLine.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                amount:
                  example: 400.0
                  type: number
                vatAmount:
                  example: 100.0
                  type: number
                correctionAmount:
                  example: 300.0
                  type: number
                assignedAmount:
                  example: 100.0
                  type: number
                quantity:
                  example: 200.0
                  type: number
                assignedQuantity:
                  example: 100.0
                  type: number
                correctionQuantity:
                  example: 100.0
                  type: number
                creditor:
                  example: "Gottlieb-O'Kon"
                  type: [string, 'null']
                type:
                  example: transport
                  type: string
                description:
                  example: 'some description'
                  type: string
          required:
            - type
            - id
    PurchaseOrder:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          type: string
        orderDisplayNumber:
          type: string
        finalized:
          type: boolean
        seller:
          type:
            - string
            - 'null'
        purchaseContract:
          type: string
        grossWeight:
          type: number
        quantity:
          type: number
        packingCount:
          type: integer
        quantityPerPacking:
          type: number
        packaging:
          type:
            - string
            - 'null'
        numberOfLots:
          type: integer
        stackingDetails:
          type: string
        supplierInstructions:
          type: string
        batchNumber:
          type: string
        ourReference:
          type: string
        numberOfPackages:
          type: integer
        internalRemarks:
          type: string
        origin:
          type: string
        loadingAddress:
          type:
            - string
            - 'null'
        destinationSilo:
          type:
            - string
            - 'null'
        loadingRemarks:
          type: string
        loadingReference:
          type: string
        unloadingRemarks:
          type: string
        manufactureDate:
          type:
            - string
            - 'null'
        expirationDate:
          type:
            - string
            - 'null'
        originForIntrastat:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    PurchaseOrder.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  type: string
                orderDisplayNumber:
                  type: string
                finalized:
                  type: boolean
                seller:
                  type: [string, 'null']
                purchaseContract:
                  type: string
                grossWeight:
                  type: number
                quantity:
                  type: number
                packingCount:
                  type: integer
                quantityPerPacking:
                  type: number
                packaging:
                  type: [string, 'null']
                numberOfLots:
                  type: integer
                stackingDetails:
                  type: string
                supplierInstructions:
                  type: string
                batchNumber:
                  type: string
                ourReference:
                  type: string
                numberOfPackages:
                  type: integer
                internalRemarks:
                  type: string
                origin:
                  type: string
                loadingAddress:
                  type: [string, 'null']
                destinationSilo:
                  type: [string, 'null']
                loadingRemarks:
                  type: string
                loadingReference:
                  type: string
                unloadingRemarks:
                  type: string
                manufactureDate:
                  type: [string, 'null']
                expirationDate:
                  type: [string, 'null']
                originForIntrastat:
                  type: string
                customFields:
                  type: array
                  items: { $ref: '#/components/schemas/CustomField.jsonapi' }
          required:
            - type
            - id
    Relation:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          example: '1234'
          type: string
        companyName:
          example: 'Parisian Inc'
          type: string
        shortCode:
          example: Parisian
          type: string
        defaultCurrency:
          example: EUR
          type: string
        isSubsidiary:
          example: true
          type: boolean
        isBank:
          example: true
          type: boolean
        isHidden:
          example: true
          type: boolean
        isFutureBroker:
          example: true
          type: boolean
        isBroker:
          example: true
          type: boolean
        isWarehouse:
          example: true
          type: boolean
        isTransporter:
          example: true
          type: boolean
        isCustomer:
          example: true
          type: boolean
        isSupplier:
          example: true
          type: boolean
        language:
          example: english
          type: string
        phone:
          example: 123-123-1234
          type: string
        email:
          example: sam@test.com
          type:
            - string
            - 'null'
          format: email
        contacts:
          type: array
          items:
            type: string
          example:
            - /api/v1/contacts/123
            - /api/v1/contacts/124
        addresses:
          type: array
          items:
            type: string
          example:
            - /api/v1/addresses/123
            - /api/v1/addresses/124
        availableInSubsidiaries:
          type: array
          items:
            type: string
          example:
            - '/api/v1/subsidiaries/Demo",'
            - '/api/v1/subsidiaries/test",'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
          examples:
            -
              key: Certifications
              value: Halal
            -
              key: factory_number
              value: '122345'
    Relation.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  example: '1234'
                  type: string
                companyName:
                  example: 'Parisian Inc'
                  type: string
                shortCode:
                  example: Parisian
                  type: string
                defaultCurrency:
                  example: EUR
                  type: string
                isSubsidiary:
                  example: true
                  type: boolean
                isBank:
                  example: true
                  type: boolean
                isHidden:
                  example: true
                  type: boolean
                isFutureBroker:
                  example: true
                  type: boolean
                isBroker:
                  example: true
                  type: boolean
                isWarehouse:
                  example: true
                  type: boolean
                isTransporter:
                  example: true
                  type: boolean
                isCustomer:
                  example: true
                  type: boolean
                isSupplier:
                  example: true
                  type: boolean
                language:
                  example: english
                  type: string
                phone:
                  example: 123-123-1234
                  type: string
                email:
                  example: sam@test.com
                  type: [string, 'null']
                  format: email
                customFields:
                  type: array
                  items: { $ref: '#/components/schemas/CustomField' }
                  examples: [{ key: Certifications, value: Halal }, { key: factory_number, value: '122345' }]
            relationships:
              type: object
              properties:
                contacts:
                  properties: { data: { type: array, items: { type: object, properties: { type: { type: string }, id: { type: string, format: iri-reference } } } } }
                addresses:
                  properties: { data: { type: array, items: { type: object, properties: { type: { type: string }, id: { type: string, format: iri-reference } } } } }
                availableInSubsidiaries:
                  properties: { data: { type: array, items: { type: object, properties: { type: { type: string }, id: { type: string, format: iri-reference } } } } }
          required:
            - type
            - id
        included:
          description: 'Related resources requested via the "include" query parameter.'
          type: array
          items:
            anyOf:
              -
                $ref: '#/components/schemas/Relation.jsonapi'
              -
                $ref: '#/components/schemas/Relation.jsonapi'
              -
                $ref: '#/components/schemas/Relation.jsonapi'
          readOnly: true
          externalDocs:
            url: 'https://jsonapi.org/format/#fetching-includes'
    SalesInvoice:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          type: string
        displayNumber:
          example: DIS-1233
          type: string
        subsidiary:
          example: DEMO
          type: string
        companyName:
          example: FOO
          type: string
        ourVatRegistration:
          example: '1234567890'
          type: string
        theirVatRegistration:
          example: '1234567890'
          type: string
        createdBy:
          example: sam
          type: string
        paymentCondition:
          example: PAY123
          type:
            - string
            - 'null'
        netAmount:
          type: number
        vatAmount:
          type: number
        totalAmount:
          type: number
        grossAmount:
          type: number
        paidAmount:
          type: number
        paymentDate:
          type: string
          format: date
          example: '2024-02-01'
        invoiceDate:
          type: string
          format: date
          example: '2024-01-01'
        dueDate:
          type: string
          format: date
          example: '2024-03-01'
        currency:
          example: EUR
          type:
            - string
            - 'null'
        exchangeRate:
          example: '1.0000'
          type:
            - number
            - 'null'
        invoiceType:
          type: string
          enum:
            - sales
            - misc
            - proforma
          example: sales
        salesJournal:
          example: '12345'
          type:
            - string
            - 'null'
        remarks:
          example: test
          type: string
        internalRemarks:
          example: test
          type: string
        invoiceLines:
          type: array
          items:
            $ref: '#/components/schemas/SalesInvoiceLine'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    SalesInvoice.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  type: string
                displayNumber:
                  example: DIS-1233
                  type: string
                subsidiary:
                  example: DEMO
                  type: string
                companyName:
                  example: FOO
                  type: string
                ourVatRegistration:
                  example: '1234567890'
                  type: string
                theirVatRegistration:
                  example: '1234567890'
                  type: string
                createdBy:
                  example: sam
                  type: string
                paymentCondition:
                  example: PAY123
                  type: [string, 'null']
                netAmount:
                  type: number
                vatAmount:
                  type: number
                totalAmount:
                  type: number
                grossAmount:
                  type: number
                paidAmount:
                  type: number
                paymentDate:
                  type: string
                  format: date
                  example: '2024-02-01'
                invoiceDate:
                  type: string
                  format: date
                  example: '2024-01-01'
                dueDate:
                  type: string
                  format: date
                  example: '2024-03-01'
                currency:
                  example: EUR
                  type: [string, 'null']
                exchangeRate:
                  example: '1.0000'
                  type: [number, 'null']
                invoiceType:
                  type: string
                  enum: [sales, misc, proforma]
                  example: sales
                salesJournal:
                  example: '12345'
                  type: [string, 'null']
                remarks:
                  example: test
                  type: string
                internalRemarks:
                  example: test
                  type: string
                invoiceLines:
                  type: array
                  items: { $ref: '#/components/schemas/SalesInvoiceLine.jsonapi' }
                customFields:
                  type: array
                  items: { $ref: '#/components/schemas/CustomField.jsonapi' }
          required:
            - type
            - id
    SalesInvoiceLine:
      type: object
      description: ''
      deprecated: false
      properties:
        quantity:
          example: 500.0
          type: number
        amount:
          example: 1000.0
          type: number
        unitCode:
          example: kg
          type: string
        vatAmount:
          example: 500.0
          type: number
        lineType:
          type: string
          enum:
            - sales
            - misc
          example: sales
        productSpecification:
          example: 'Est quo sit accusantium nesciunt aliquam error beatae culpa repellat'
          type: string
        description:
          example: 'some description '
          type: string
        price:
          example: 2460.0
          type: number
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    SalesInvoiceLine.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                quantity:
                  example: 500.0
                  type: number
                amount:
                  example: 1000.0
                  type: number
                unitCode:
                  example: kg
                  type: string
                vatAmount:
                  example: 500.0
                  type: number
                lineType:
                  type: string
                  enum: [sales, misc]
                  example: sales
                productSpecification:
                  example: 'Est quo sit accusantium nesciunt aliquam error beatae culpa repellat'
                  type: string
                description:
                  example: 'some description '
                  type: string
                price:
                  example: 2460.0
                  type: number
                customFields:
                  type: array
                  items: { $ref: '#/components/schemas/CustomField.jsonapi' }
          required:
            - type
            - id
    SalesOrder:
      type: object
      description: ''
      deprecated: false
      properties:
        orderDisplayNumber:
          type: string
        finalized:
          type: boolean
        buyer:
          type:
            - string
            - 'null'
        salesContract:
          type: string
        grossWeight:
          type: number
        quantity:
          type: number
        packingCount:
          type: integer
        quantityPerPacking:
          type: number
        packaging:
          type:
            - string
            - 'null'
        pallet:
          type:
            - string
            - 'null'
        numberOfLots:
          type: integer
        stackingDetails:
          type: string
        remarks:
          type: string
        sourceSilo:
          type:
            - string
            - 'null'
        unloadingRemarks:
          type: string
        unloadingAddress:
          type: string
        unloadingReference:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    SalesOrder.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                orderDisplayNumber:
                  type: string
                finalized:
                  type: boolean
                buyer:
                  type: [string, 'null']
                salesContract:
                  type: string
                grossWeight:
                  type: number
                quantity:
                  type: number
                packingCount:
                  type: integer
                quantityPerPacking:
                  type: number
                packaging:
                  type: [string, 'null']
                pallet:
                  type: [string, 'null']
                numberOfLots:
                  type: integer
                stackingDetails:
                  type: string
                remarks:
                  type: string
                sourceSilo:
                  type: [string, 'null']
                unloadingRemarks:
                  type: string
                unloadingAddress:
                  type: string
                unloadingReference:
                  type: string
                customFields:
                  type: array
                  items: { $ref: '#/components/schemas/CustomField.jsonapi' }
          required:
            - type
            - id
    Silo:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          example: 1234
          type: string
        name:
          example: 'Goldner Lock Alyceborough, FL 17320-4106'
          type: string
        loadUnloadAddress:
          example: '28733 Goldner Lock Alyceborough, FL 17320-4106'
          type: string
        companyName:
          example: 'Reichel, Schuster and Hettinge'
          type: string
        relation:
          type: string
          format: uri-reference
          example: /api/v1/relations/1212
        address:
          type:
            - string
            - 'null'
          format: uri-reference
          example: /api/v1/addresses/1212
        type:
          example: Input
          type: string
          enum:
            - Input
            - Output
            - Unknown
        singleBatch:
          example: true
          type: boolean
        isHidden:
          example: true
          type: boolean
    Silo.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          example: 1234
          type: string
        name:
          example: 'Goldner Lock Alyceborough, FL 17320-4106'
          type: string
        loadUnloadAddress:
          example: '28733 Goldner Lock Alyceborough, FL 17320-4106'
          type: string
        companyName:
          example: 'Reichel, Schuster and Hettinge'
          type: string
        relation:
          type: string
          format: uri-reference
          example: /api/v1/relations/1212
        address:
          type:
            - string
            - 'null'
          format: uri-reference
          example: /api/v1/addresses/1212
        type:
          example: Input
          type: string
          enum:
            - Input
            - Output
            - Unknown
        singleBatch:
          example: true
          type: boolean
        isHidden:
          example: true
          type: boolean
    Stock:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          type: string
        ourReference:
          type: string
        warehouseReference:
          type: string
        batchNumber:
          type: string
        pricePerTon:
          type: number
        remarks:
          type: string
        specification:
          type: string
        analysis:
          type: string
        stakingDetails:
          type: string
        packaging:
          type:
            - string
            - 'null'
        product:
          type:
            - string
            - 'null'
        warehouse:
          type:
            - string
            - 'null'
        subsidiary:
          type:
            - string
            - 'null'
        status:
          type: string
        origin:
          type: string
        unit:
          type: string
        expirationDate:
          type:
            - string
            - 'null'
        manufacturingDate:
          type:
            - string
            - 'null'
        mutations:
          type: array
          items:
            $ref: '#/components/schemas/Mutation'
        stockReservation:
          type: array
          items:
            $ref: '#/components/schemas/StockReservation'
        productAnalysis:
          type: array
          items:
            $ref: '#/components/schemas/ProductAnalysis'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    Stock.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  type: string
                ourReference:
                  type: string
                warehouseReference:
                  type: string
                batchNumber:
                  type: string
                pricePerTon:
                  type: number
                remarks:
                  type: string
                specification:
                  type: string
                analysis:
                  type: string
                stakingDetails:
                  type: string
                packaging:
                  type: [string, 'null']
                product:
                  type: [string, 'null']
                warehouse:
                  type: [string, 'null']
                subsidiary:
                  type: [string, 'null']
                status:
                  type: string
                origin:
                  type: string
                unit:
                  type: string
                expirationDate:
                  type: [string, 'null']
                manufacturingDate:
                  type: [string, 'null']
                mutations:
                  type: array
                  items: { $ref: '#/components/schemas/Mutation.jsonapi' }
                stockReservation:
                  type: array
                  items: { $ref: '#/components/schemas/StockReservation.jsonapi' }
                productAnalysis:
                  type: array
                  items: { $ref: '#/components/schemas/ProductAnalysis.jsonapi' }
                customFields:
                  type: array
                  items: { $ref: '#/components/schemas/CustomField.jsonapi' }
          required:
            - type
            - id
    StockReservation:
      type: object
      description: ''
      deprecated: false
      properties:
        reservedBy:
          type: string
        reservedQuantity:
          type: number
        validThrough:
          type:
            - string
            - 'null'
        remarks:
          type: string
    StockReservation.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                reservedBy:
                  type: string
                reservedQuantity:
                  type: number
                validThrough:
                  type: [string, 'null']
                remarks:
                  type: string
          required:
            - type
            - id
    StockTransfer:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          writeOnly: true
          type: string
        orderDisplayNumber:
          example: DS-11605
          type: string
        sourceQuantity:
          example: 400.1
          type: number
        destinationQuantity:
          example: 400.1
          type: number
        sourceGrossWeight:
          example: 500.1
          type: number
        destinationGrossWeight:
          example: 500.1
          type: number
        loadingReference:
          example: 'loading ref'
          type: string
        loadingAddress:
          type: string
          format: uri-reference
          example: /api/v1/addresses/1212
        loadingRemarks:
          example: 'Wegen in Purmerend'
          type: string
        sourcePackaging:
          type: string
          format: uri-reference
          example: /api/v1/packaging/bigbag
        sourceAnalysis:
          example: 'some analysis'
          type: string
        destinationWarehouseReference:
          example: '1755 SEF-23899'
          type: string
        ourReference:
          example: 12565-2245
          type: string
        specification:
          example: 'Some specification about product'
          type: string
        destinationPackingCount:
          example: 40
          type: integer
        destinationPackaging:
          type: string
          format: uri-reference
          example: /api/v1/packaging/bigbag
        unloadingReference:
          example: REF-23899
          type: string
        unloadingAddress:
          type: string
          format: uri-reference
          example: /api/v1/addresses/1212
        sourceSilo:
          type: string
          format: uri-reference
          example: /api/v1/silos/1212
        destinationSilo:
          type: string
          format: uri-reference
          example: /api/v1/silos/1212
        originForIntrastat:
          example: NL
          type: string
    StockTransfer.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  writeOnly: true
                  type: string
                orderDisplayNumber:
                  example: DS-11605
                  type: string
                sourceQuantity:
                  example: 400.1
                  type: number
                destinationQuantity:
                  example: 400.1
                  type: number
                sourceGrossWeight:
                  example: 500.1
                  type: number
                destinationGrossWeight:
                  example: 500.1
                  type: number
                loadingReference:
                  example: 'loading ref'
                  type: string
                loadingAddress:
                  type: string
                  format: uri-reference
                  example: /api/v1/addresses/1212
                loadingRemarks:
                  example: 'Wegen in Purmerend'
                  type: string
                sourcePackaging:
                  type: string
                  format: uri-reference
                  example: /api/v1/packaging/bigbag
                sourceAnalysis:
                  example: 'some analysis'
                  type: string
                destinationWarehouseReference:
                  example: '1755 SEF-23899'
                  type: string
                ourReference:
                  example: 12565-2245
                  type: string
                specification:
                  example: 'Some specification about product'
                  type: string
                destinationPackingCount:
                  example: 40
                  type: integer
                destinationPackaging:
                  type: string
                  format: uri-reference
                  example: /api/v1/packaging/bigbag
                unloadingReference:
                  example: REF-23899
                  type: string
                unloadingAddress:
                  type: string
                  format: uri-reference
                  example: /api/v1/addresses/1212
                sourceSilo:
                  type: string
                  format: uri-reference
                  example: /api/v1/silos/1212
                destinationSilo:
                  type: string
                  format: uri-reference
                  example: /api/v1/silos/1212
                originForIntrastat:
                  example: NL
                  type: string
          required:
            - type
            - id
    Subsidiary:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          example: '12345'
          type: string
        name:
          example: 'Acme Corporation'
          type: string
        address:
          example: '123 Business Street'
          type: string
        zipCode:
          example: '12345'
          type: string
        city:
          example: Amsterdam
          type: string
        country:
          example: Netherlands
          type: string
        website:
          example: www.acme.com
          type: string
        abbreviationName:
          example: ACME
          type: string
        cocLocality:
          example: Amsterdam
          type: string
        cocRegistrationNumber:
          example: '12345678'
          type: string
        accountingCurrency:
          example: EUR
          type: string
        accountingCode:
          example: '1000'
          type: string
        statisticalExportType:
          example: EU
          type: string
        vatRegistrations:
          example:
            -
              registrationNumber: NL880985927B21
              country:
                code: NL
                name: Nederland
                isEuMember: true
          type: array
          items:
            type:
              - unknown_type
              - 'null'
        customFields:
          example:
            -
              key: nvwa
              value: EG354500
            -
              key: vihb
              value: '12599'
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    Subsidiary.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  example: '12345'
                  type: string
                name:
                  example: 'Acme Corporation'
                  type: string
                address:
                  example: '123 Business Street'
                  type: string
                zipCode:
                  example: '12345'
                  type: string
                city:
                  example: Amsterdam
                  type: string
                country:
                  example: Netherlands
                  type: string
                website:
                  example: www.acme.com
                  type: string
                abbreviationName:
                  example: ACME
                  type: string
                cocLocality:
                  example: Amsterdam
                  type: string
                cocRegistrationNumber:
                  example: '12345678'
                  type: string
                accountingCurrency:
                  example: EUR
                  type: string
                accountingCode:
                  example: '1000'
                  type: string
                statisticalExportType:
                  example: EU
                  type: string
                vatRegistrations:
                  example: [{ registrationNumber: NL880985927B21, country: { code: NL, name: Nederland, isEuMember: true } }]
                  type: array
                  items: { type: [unknown_type, 'null'] }
                customFields:
                  example: [{ key: nvwa, value: EG354500 }, { key: vihb, value: '12599' }]
                  type: array
                  items: { $ref: '#/components/schemas/CustomField.jsonapi' }
          required:
            - type
            - id
    TextLine:
      type: object
      description: ''
      deprecated: false
      properties:
        code:
          type: string
        remarks:
          type: string
    TextLine.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                code:
                  type: string
                remarks:
                  type: string
          required:
            - type
            - id
    TradeCondition:
      type: object
      description: ''
      deprecated: false
      properties:
        code:
          example: TC001
          type: string
        remarks:
          example: 'test remarks'
          type: string
        descriptions:
          type: array
          items:
            type: object
            properties:
              language:
                type: string
              description:
                type: string
            example:
              -
                language: en_EN
                description: 'Sweet edible wheypowder, FEED grad'
              -
                language: nl_NL
                description: 'Zoet eetbaar weipoeder, FEED grad'
        subsidiaries:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
    TradeCondition.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                code:
                  example: TC001
                  type: string
                remarks:
                  example: 'test remarks'
                  type: string
                descriptions:
                  type: array
                  items: { type: object, properties: { language: { type: string }, description: { type: string } }, example: [{ language: en_EN, description: 'Sweet edible wheypowder, FEED grad' }, { language: nl_NL, description: 'Zoet eetbaar weipoeder, FEED grad' }] }
            relationships:
              type: object
              properties:
                subsidiaries:
                  properties: { data: { type: array, items: { type: object, properties: { type: { type: string }, id: { type: string, format: iri-reference } } } } }
          required:
            - type
            - id
        included:
          description: 'Related resources requested via the "include" query parameter.'
          type: array
          items:
            anyOf:
              -
                $ref: '#/components/schemas/TradeCondition.jsonapi'
          readOnly: true
          externalDocs:
            url: 'https://jsonapi.org/format/#fetching-includes'
    TransportOrder:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          type: string
        orderNumber:
          example: '123456'
          type: string
        quantity:
          example: 300.23
          type: number
        currency:
          example: EUR
          type: string
        pricingType:
          example: Regular
          type: string
        carrierReferenceNumber:
          example: TEST123
          type: string
        carrier:
          example: foo
          type: string
        shipper:
          example: foo
          type:
            - string
            - 'null'
        estimatedAmount:
          example: 123
          type: number
        invoiceNumber:
          example: ABC132
          type:
            - string
            - 'null'
        loadingDate:
          example: '2021-01-01'
          type:
            - string
            - 'null'
        unloadingDate:
          example: '2021-01-01'
          type:
            - string
            - 'null'
        invoiceDate:
          example: '2021-01-01'
          type:
            - string
            - 'null'
        dueDate:
          example: '2021-01-01'
          type:
            - string
            - 'null'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    TransportOrder.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                _id:
                  type: string
                orderNumber:
                  example: '123456'
                  type: string
                quantity:
                  example: 300.23
                  type: number
                currency:
                  example: EUR
                  type: string
                pricingType:
                  example: Regular
                  type: string
                carrierReferenceNumber:
                  example: TEST123
                  type: string
                carrier:
                  example: foo
                  type: string
                shipper:
                  example: foo
                  type: [string, 'null']
                estimatedAmount:
                  example: 123
                  type: number
                invoiceNumber:
                  example: ABC132
                  type: [string, 'null']
                loadingDate:
                  example: '2021-01-01'
                  type: [string, 'null']
                unloadingDate:
                  example: '2021-01-01'
                  type: [string, 'null']
                invoiceDate:
                  example: '2021-01-01'
                  type: [string, 'null']
                dueDate:
                  example: '2021-01-01'
                  type: [string, 'null']
                customFields:
                  type: array
                  items: { $ref: '#/components/schemas/CustomField.jsonapi' }
          required:
            - type
            - id
    VatRegistration:
      type: object
      description: ''
      deprecated: false
      properties:
        registrationNumber:
          type: string
          example: NL123456789B01
        country:
          example:
            code: NL
            name: Netherlands
            isEuMember: true
          anyOf:
            -
              $ref: '#/components/schemas/Country'
            -
              type: 'null'
    VatRegistration.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                registrationNumber:
                  type: string
                  example: NL123456789B01
                country:
                  example: { code: NL, name: Netherlands, isEuMember: true }
                  anyOf: [{ $ref: '#/components/schemas/Country.jsonapi' }, { type: 'null' }]
          required:
            - type
            - id
    WebhookPayload:
      type: object
      description: ''
      deprecated: false
      properties:
        eventId:
          readOnly: true
          description: 'Unique identifier for the event'
          type: string
        eventName:
          readOnly: true
          description: 'Domain event triggering the webhook'
          type: string
          enum:
            - order.created
            - order.updated
            - order.deleted
        resourceId:
          readOnly: true
          description: 'Unique identifier for the resource'
          type: string
        occurredAt:
          readOnly: true
          description: 'Timestamp of the event in Unix epoch format'
          type: integer
          format: int64
        url:
          readOnly: true
          description: 'URL to fetch the resource or "NA" if not applicable, for example when the resource is deleted.'
          oneOf:
            -
              type: string
              format: uri
            -
              type: string
              enum:
                - NA
    WebhookPayload.jsonapi:
      type: object
      description: ''
      deprecated: false
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                eventId:
                  readOnly: true
                  description: 'Unique identifier for the event'
                  type: string
                eventName:
                  readOnly: true
                  description: 'Domain event triggering the webhook'
                  type: string
                  enum: [order.created, order.updated, order.deleted]
                resourceId:
                  readOnly: true
                  description: 'Unique identifier for the resource'
                  type: string
                occurredAt:
                  readOnly: true
                  description: 'Timestamp of the event in Unix epoch format'
                  type: integer
                  format: int64
                url:
                  readOnly: true
                  description: 'URL to fetch the resource or "NA" if not applicable, for example when the resource is deleted.'
                  oneOf: [{ type: string, format: uri }, { type: string, enum: [NA] }]
          required:
            - type
            - id
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes:
    api_user_token:
      type: http
      description: 'The token created for an API user in the system'
      name: 'API User Token'
      scheme: bearer
      bearerFormat: base64
security:
  -
    api_user_token: []
tags:
  -
    name: Contract
    description: 'The **Contract API** provides read-only access to details about contracts, both purchase and sales contracts.'
  -
    name: Order
    description: 'The **Order API** provides read-only access to details about orders, purchase, sales, transfers and back to back orders.'
  -
    name: 'Purchase Invoice'
    description: |-
      The **Purchase Invoice API** provides read-only access to details regarding invoices related to goods or services purchased. It allows you to retrieve information such as:

      - **Invoice numbers**
      - **Supplier details**
      - **Invoice dates**
      - **Amounts (including VAT)**
      - **Payment statuses**

      The API supports filtering by parameters like invoice date, supplier, or invoice status (e.g., paid, unpaid, overdue).

      This API is essential for businesses to track and manage purchase invoices, ensuring accurate financial records and timely payments to suppliers. As it is read-only, no modifications to invoice data are permitted.
  -
    name: 'Sales Invoice'
    description: |-
      The **Sales invoice API** provides read-only access to details regarding invoices related to goods or services purchased. It allows you to retrieve information such as:

      - **Invoice numbers**
      - **Supplier details**
      - **Invoice dates**
      - **Amounts (including VAT)**
      - **Payment statuses**

      The API supports filtering by parameters like invoice date,  or invoice type (e.g., misc, proforma, sales).

      This API is essential for businesses to track and manage sales invoices, ensuring accurate financial records and timely payments to suppliers. As it is read-only, no modifications to invoice data are permitted.
  -
    name: Stock
    description: 'The **Stock API** provides read-only access to details about stock and inventory.'
  -
    name: Production
    description: 'The **Production API** provides read-only access to details regarding production orders'
  -
    name: Product
    description: |-
      The Product API provides read-only access to detailed product data, including fields such as product code,
      name, and attributes like isLiquid (indicating whether the product is a liquid).
      You can retrieve product information like descriptions, categories, SKUs, and stock status. Additionally, the API supports querying products by specific fields, including code, name, and other attributes like whether the product is liquid or solid. This API allows filtering and viewing of product specifications, but no modifications can be made to the product data
  -
    name: Relation
    description: |-
      The Relation API provides read-only access to data about relationships between entities that are involved in contracts,
      as well as purchase and sales orders. This API allows you to retrieve details about customers,
       suppliers, and other business partners. You can query relationships based on entity type (e.g., buyer, seller), and view relevant information like entity names, contact details, and associated contracts or orders.
      The data is read-only, allowing you to view but not modify the relationships between entities.
  -
    name: 'Api User'
    description: 'The Api User API provides read-only access to details about the current api user, also it allows to update the webhook url.'
  -
    name: Packaging
    description: |-
      The Packaging API provides read-only access to details about packaging,
      like name, description, type, etc.
  -
    name: Pallet
    description: |-
      The Pallet API provides read-only access to details about pallets,
      like name, description, type, etc.
  -
    name: 'Transport order'
    description: |-
      The Transport Order API provides read-only access to details about transport orders,
      like name, description, type, etc.
  -
    name: 'Trade Condition'
    description: '  The **Trade Condition API** provides secure access to the terms and conditions associated with trade agreements.'
  -
    name: 'Payment Condition'
    description: '  The **Payment Condition API** provides secure access to the terms and conditions associated with payment agreements.'
  -
    name: Subsidiary
    description: |-
      The Subsidiary API provides read-only access to details about subsidiaries,
      which are companies involved in the buying and selling of goods. It allows you to retrieve information such as subsidiary names, locations, and contact details. You can also query subsidiaries based on their business activities, such as whether they act as buyers, sellers, or both. This API is essential for tracking the operations and relationships of subsidiary entities in the supply chain,
      but no modifications to the data are permitted.
  -
    name: Silo
    description: |-
      The silo API provides read-only access to details about silo and relation silos,
      what is name of silo ,where it is located.other information as well
externalDocs:
  description: 'API documentation'
  url: 'https://developers.qbiltrade.com/docs/v1'
webhooks:
  container_order.changed:
    post:
      operationId: api_webhook_container_order_changed
      tags:
        - Order
      responses:
        2XX:
          description: 'Return 200-299 status to indicate that the data was received successfully'
        default:
          description: 'Returning 300-599 status will retry webhooks after 5 minutes, 25 minutes and 2 hours 5 minutes.'
      summary: 'Container Order changed'
      description: 'When a container order is created, updated or deleted we will send a POST request with this data to the configured URL. The webhook url can be configured via /me endpoint.'
      parameters:
        -
          name: Webhook-Signature
          in: header
          description: 'HMAC-SHA256 signature of the Webhook-Event header + Webhook-Id header + request body using the signing key.'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: Webhook-Event
          in: header
          description: 'Event triggering the webhook for example relation.created, relation.updated, order.finalized etc'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: Webhook-Id
          in: header
          description: 'Unique identifier for the event'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'Event payload containing url for fetching the resource if applicable.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookPayload'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/WebhookPayload.jsonapi'
        required: true
      deprecated: false
  relation.changed:
    post:
      operationId: api_webhook_relation_changed
      tags:
        - Relation
      responses:
        2XX:
          description: 'Return 200-299 status to indicate that the data was received successfully'
        default:
          description: 'Returning 300-599 status will retry webhooks after 5 minutes, 25 minutes and 2 hours 5 minutes.'
      summary: 'Relation changed'
      description: 'When a relation is created, updated or deleted we will send a POST request with this data to the configured URL. The webhook url can be configured via /me endpoint.'
      parameters:
        -
          name: Webhook-Signature
          in: header
          description: 'HMAC-SHA256 signature of the Webhook-Event header + Webhook-Id header + request body using the signing key.'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: Webhook-Event
          in: header
          description: 'Event triggering the webhook for example relation.created, relation.updated, order.finalized etc'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: Webhook-Id
          in: header
          description: 'Unique identifier for the event'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'Event payload containing url for fetching the resource if applicable.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookPayload'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/WebhookPayload.jsonapi'
        required: true
      deprecated: false

