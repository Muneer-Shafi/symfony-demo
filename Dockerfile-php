FROM php:8.2-fpm

# Install dependencies and PHP extensions
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    zlib1g-dev \
    libxml2-dev \
    libpng-dev \
    libzip-dev \
    vim \
    curl \
    debconf \
    subversion \
    apt-transport-https \
    apt-utils \
    build-essential \
    locales \
    acl \
    mailutils \
    wget \
    nodejs \
    zip \
    unzip \
    gnupg \
    sudo \
    ssh \
    && docker-php-ext-install \
    pdo_mysql \
    soap \
    zip \
    opcache \
    gd \
    intl \
    && rm -rf /var/lib/apt/lists/*

# Copy PHP configuration files
COPY ./docker/build/opcache.ini /usr/local/etc/php/conf.d/
COPY ./docker/build/error_reporting.ini /usr/local/etc/php/conf.d/

# Install Symfony CLI
RUN curl -sS https://get.symfony.com/cli/installer | bash \
    && mv /root/.symfony5/bin/symfony /usr/local/bin/symfony

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer
RUN chmod +x /usr/bin/composer
ENV COMPOSER_ALLOW_SUPERUSER=1

# Set up permissions for the www-data user
RUN usermod -u 1000 www-data \
    && usermod -a -G www-data root \
    && mkdir -p /var/www \
    && chown -R www-data:www-data /var/www \
    && mkdir -p /var/www/.composer \
    && chown -R www-data:www-data /var/www/.composer

# Set working directory
WORKDIR /var/www/demo

# Copy application code
COPY . /var/www/demo

# Set permissions for the application directory
RUN chown -R www-data:www-data /var/www/demo

# Install dependencies without running post-install scripts
USER www-data
RUN composer install --no-dev --optimize-autoloader --no-scripts

# Run post-install scripts (optional)
USER root
RUN su www-data -s /bin/sh -c "composer run-script post-install-cmd || true"

# Expose ports for PHP-FPM
EXPOSE 9000

# Start the PHP-FPM server
CMD ["php-fpm"]
